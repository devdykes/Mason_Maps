{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamis\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mason_Maps\\\\mason-maps\\\\src\\\\components\\\\MapDirections.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 38.875,\n  lng: -77.27\n};\nconst origin = {\n  lat: 38.833423,\n  lng: -77.306465\n};\nconst destination = {\n  lat: 38.829418,\n  lng: -77.307644\n};\nconst MapDirections = () => {\n  _s();\n  const [directions, setDirections] = useState(null);\n  const handleMapLoad = map => {\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin,\n      destination,\n      travelMode: window.google.maps.TravelMode.WALKING\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirections(result);\n      } else {\n        console.error('Error fetching directions:', status);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBuFtafeZFSxUruU-nLvUSnRo3TXbGpIW0\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 11,\n      onLoad: handleMapLoad,\n      children: directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        directions: directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MapDirections, \"jlUTsUCrGFcBuZRhyFWco8+XjUM=\");\n_c = MapDirections;\nexport default MapDirections;\nvar _c;\n$RefreshReg$(_c, \"MapDirections\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","DirectionsRenderer","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","origin","destination","MapDirections","_s","directions","setDirections","handleMapLoad","map","directionsService","window","google","maps","DirectionsService","route","travelMode","TravelMode","WALKING","result","status","console","error","googleMapsApiKey","children","mapContainerStyle","zoom","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jamis/OneDrive/Documents/GitHub/Mason_Maps/mason-maps/src/components/MapDirections.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: 38.875,\r\n  lng: -77.27\r\n};\r\n\r\nconst origin = { lat: 38.833423, lng: -77.306465 }; \r\nconst destination = { lat: 38.829418, lng: -77.307644 };\r\n\r\nconst MapDirections = () => {\r\n  const [directions, setDirections] = useState(null);\r\n\r\n  const handleMapLoad = (map) => {\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    directionsService.route(\r\n      {\r\n        origin,\r\n        destination,\r\n        travelMode: window.google.maps.TravelMode.WALKING\r\n      },\r\n      (result, status) => {\r\n        if (status === 'OK') {\r\n          setDirections(result);\r\n        } else {\r\n          console.error('Error fetching directions:', status);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBuFtafeZFSxUruU-nLvUSnRo3TXbGpIW0\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={11}\r\n        onLoad={handleMapLoad}\r\n      >\r\n        {directions && <DirectionsRenderer directions={directions} />}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapDirections;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,MAAM,GAAG;EAAEF,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE,CAAC;AAAU,CAAC;AAClD,MAAME,WAAW,GAAG;EAAEH,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE,CAAC;AAAU,CAAC;AAEvD,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMkB,aAAa,GAAIC,GAAG,IAAK;IAC7B,MAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAEpEJ,iBAAiB,CAACK,KAAK,CACrB;MACEb,MAAM;MACNC,WAAW;MACXa,UAAU,EAAEL,MAAM,CAACC,MAAM,CAACC,IAAI,CAACI,UAAU,CAACC;IAC5C,CAAC,EACD,CAACC,MAAM,EAAEC,MAAM,KAAK;MAClB,IAAIA,MAAM,KAAK,IAAI,EAAE;QACnBb,aAAa,CAACY,MAAM,CAAC;MACvB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,MAAM,CAAC;MACrD;IACF,CACF,CAAC;EACH,CAAC;EAED,oBACEzB,OAAA,CAACH,UAAU;IAAC+B,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eACpE7B,OAAA,CAACJ,SAAS;MACRkC,iBAAiB,EAAE7B,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACf2B,IAAI,EAAE,EAAG;MACTC,MAAM,EAAEnB,aAAc;MAAAgB,QAAA,EAErBlB,UAAU,iBAAIX,OAAA,CAACF,kBAAkB;QAACa,UAAU,EAAEA;MAAW;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAAC1B,EAAA,CAlCID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}